version: "3.9"
services:
  nodejs:
    image: "node:${NODEJS_VERSION}"
    env_file:
      - ./docker/.env.docker.local
    working_dir: /usr/src/app
    ports:
      - "${NODEJS_PORT}:${NODEJS_PORT}"
    depends_on:
      - mysql
      - mongo
    volumes:
      - "${NODEJS_VOLUMES_FILES}:/usr/src/app"
    environment:
      - "NODE_ENV=${NODEJS_ENV}"
    command: sh -c "npm install && npm run start:dev"
    restart: always

  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
      - "${NGINX_SSL_PORT}:${NGINX_SSL_PORT}"
    volumes:
      - "${NGINX_VOLUMES_NGINX_CONF}:/etc/nginx/nginx.conf"
      - "${NGINX_VOLUMES_NGINX_SSL_CERTS}:/etc/nginx/certs"
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - nodejs
    restart: always

  mysql:
    image: mysql:${MYSQL_VERSION}
    env_file:
      - ./docker/.env.docker.local
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    expose:
      - ${MYSQL_PORT}
    volumes:
      - api-mysql:/var/lib/mysql
    restart: always

  mongo:
    image: mongo:${MONGO_VERSION}
    env_file:
      - ./docker/.env.docker.local
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    expose:
      - ${MONGO_PORT}
    volumes:
      - api-mongo:/data/db
      - ./docker/mongo:/docker-entrypoint-initdb.d
    restart: always

volumes:
  api-mysql:
  api-mongo: